New Technology Is Built on a ‘Stack.’ Is That the Best Way to Understand Everything Else, Too?
Nearly three decades later, now that computing has become truly ubiquitous, its metaphors are deployed without a moment’s thought. We don’t just talk intuitively about the ways in which people are “programmed” — we talk about our emotional “bandwidth” and look for clever ways to “hack” our daily routines. These metaphors have developed right alongside the technology from which they’re derived, starting with hardware and then moving to software, apps and networks. Now we’ve arrived at a tempting concept that promises to contain all of this: the stack. These days, corporate managers talk about their solution stacks and idealize “full stack” companies; athletes share their recovery stacks and muscle-building stacks; devotees of so-called smart drugs obsessively modify their brain-enhancement stacks to address a seemingly infinite range of flaws and desires.
“Stack,” in technological terms, can mean a few different things, but the most relevant usage grew from the start-up world: A stack is a collection of different pieces of software that are being used together to accomplish a task. A smartphone’s software stack, for instance, could be described as a layered structure: There’s the low-level code that controls the device’s hardware, and then, higher up, its basic operating system, and then, even higher, the software you use to message a friend or play a game. An individual application’s stack might include the programming languages used to build it, the services used to connect it to other apps or the service that hosts it online; a “full stack” developer would be someone proficient at working with each layer of that system, from bottom to top.
The stack isn’t just a handy concept for visualizing how technology works. For many companies, the organizing logic of the software stack becomes inseparable from the logic of the business itself. The system that powers Snapchat, for instance, sits on top of App Engine, a service owned by Google; to the extent that Snapchat even exists as a service, it is as a stack of different elements. “What you end up with is entire companies being built on a set of software tools and services,” says Yonas Beshawred, whose own company, StackShare, lets tech professionals publish their companies’ stacks and see what others are using, comparing technology the way hobbyists might compare gear. “You can think of them as Lego blocks.” A healthy stack, or a clever one, is tantamount (the thinking goes) to a well-structured company.
On StackShare, Airbnb lists over 50 services in its stack, including items as fundamental as the Ruby programming language and as complex and familiar as Google Docs. StackShare itself — the website — lists over 90 items, according to a more liberal usage of the term: Alongside basic infrastructure are communications tools like Skype and a payroll service called Zenefits. When I asked Beshawred about the word’s broadening usage, his response was basically Daugmanian: “The reason we’re talking about software now is because this is the dominant form that technology takes right now,” he said. “It’s really just a function of the state of the industry, and how ubiquitous software has become.” Ten years ago, he said, your company’s tech “stack” would have included actual hardware, like servers. Ten years before that, you wouldn’t have been asked about your stack at all — though an obnoxious time traveler from the Silicon Valley of 2017 might insist that a phone system, a parcel service and credit-card companies composed, more or less, a mail-order stack.
Stack logic is only just finding its footing in the corporate world, and it hasn’t spilled into mainstream conversation just yet. (People might intuit what you meant if you described your Twitter and Facebook accounts as a “social-media stack,” but they might also intuit that they want their conversation with you to be over as quickly as possible.) The concept, however, has gained traction in a telling set of subcultures. Bodybuilders, for instance, obsess over their supplement stacks, arguing on fitness forums about which combinations of protein powder, fish oils and amino acids will maximize muscle growth and minimize recovery time; GNC, the supplement chain, has a whole section of its site called “Stacks and Bundles.” On Reddit, nearly 100,000 people are subscribed to a forum for Nootropics — “drugs, supplements, nutraceuticals, and functional foods that improve mental functions,” in the forum’s words — where they list their stacks: Theanine, Modafinil, “a good multivitamin,” caffeine. Sample posts on a sister forum called StackAdvice include “Good effective nootropic stack for competitive college performance?” and “Seeking stack advice for mood enhancement.” Users compare and critique stacks like developers arguing about server software.
Elsewhere, Scott Adams — the creator of “Dilbert” and, more recently, an unlikely pro-Trump political blogger — has stretched this usage to an extreme, attributing Trump’s political potency to his unique “talent stack.” (Including, among many others, the skills of “social media,” “strategy” and “persuasion” — the last of these is a longtime obsession for Adams.) In this formulation, Kanye West’s success is a result of talents years in the stacking, including “his business acumen, his drive and his knack for self-promotion.” Adams also says his girlfriend, an Instagram personality, stacks “model tricks” with “all the tools of social media.” This method for describing the qualities of other people can border on the sociopathic; it calls to mind, and has piqued the interest of, online pickup-artist culture. But in a world where Amazon’s Echo device goes by the name “Alexa,” speaks in a human voice and can be supplemented with various “skills” — individual bits of software that stack up into a crude personality — the concept of a stacked self is neither surprising nor entirely dissonant.
Other attempts to elaborate on the stack have been more rigorous and comprehensive, less personal and more global. In a 2016 book, “The Stack: On Software and Sovereignty,” the professor and design theorist Benjamin Bratton sets out to, in his words, propose a “specific model for the design of political geography tuned to this era of planetary-scale computation,” by drawing on the “multilayered structure of software, hardware and network ‘stacks’ that arrange different technologies vertically within a modular, interdependent order.” In other words, Bratton sees the world around us as one big emerging technological stack. In his telling, the six-layer stack we inhabit is complex, fluid and vertigo-inducing: Earth, Cloud, City, Address, Interface and User. It is also, he suggests, extremely powerful, with the potential to undermine and replace our current conceptions of, among other things, the sovereign state — ushering us into a world blown apart and reassembled by software. This might sound extreme, but such is the intoxicating logic of the stack.
