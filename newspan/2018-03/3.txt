On any given election night, you will find me huddled over a laptop with a crew of designers, developers and graphics editors in a tiny conference room on the second floor of The Times’s Manhattan headquarters. If we’re lucky, there is a spread of tacos, giving the space the faint perfume of charred meat. A television screen on the wall is showing election results on The Times’s website.
For newsroom programmers like me, the night is a little like a competitive rocket launch. We provide readers with minute-by-minute updates of the vote tallies and we race against other news outlets to get our results online first. But there is always a risk that the page will crash under the weight of our readers.
So, given the pressure, why do newsroom programmers love elections so much?
An election is a unique engineering challenge. To provide results to readers, we built software to crunch hundreds of thousands of rows of data. Every five seconds, we collect data from The Associated Press for thousands of candidates, calculate the percentage of precincts reporting and standardize results to the county level. Once we have the numbers, we send updates to our readers’ web browsers. Then we do the whole thing again seconds later.
We can run tests for months, but we’re most likely to experience failure when we’re getting off the launchpad: We can’t feel comfortable with our planning until we get the first round of votes live.
Even with the preparation, things do go wrong. In previous years, the sheer amount of traffic has caused error pages. And of course, in 2016, our models indicated Hillary Clinton was favored to win the presidential race, a prediction that changed when the live results began flowing in. But we’ve avoided many of the most embarrassing errors, like calling the race for the wrong candidate.
Once we’re live, we’re monitoring how we’re doing in real time. How many readers are on the page? How much faster do we have the latest update than our competition? What does our model say is happening? Has CNN projected a winner yet?
Election night is also when our competitors introduce new tools. On the night of the 2017 general election, the TV in our conference room had our pages and the Matrix-like scrolling logs for our election data. But it also had a web browser with tabs open to Axios, CNN, Politico, The Wall Street Journal and The Washington Post.
We also communicate with other news outlets. In 2015, 2016 and 2017, we shared a private Slack channel with The A.P.’s election developers, along with those from NPR, Politico, The Los Angeles Times, The Wall Street Journal and The Washington Post, so that we could discuss problems we saw in the data feed and solutions we might need to apply. The Times poured resources into an open-source software library called Elex that any organization could use to get real-time election results from The A.P.
But for all the competition around who has the fastest results or the most interesting visual presentation, the single most discussed element is still who has the best dinner. At The Times, we prefer tacos (my favorite: lengua), Sichuan (I hold out for the dan-dan noodles and mapo tofu) and Greek (lamb slices and those fantastic lemony potatoes), though we’ve been known to have the occasional barbecue platter.
Last year might have been an off-year for national elections. But New York City elected a mayor, and The Times had a knockout spread of street tacos. My only regret: Everyone in our cramped conference room smelled like cilantro and onions until we turned everything off and went home around 1 a.m. It was a small price to pay to hold our position in the increasingly competitive dinner wars of election night.