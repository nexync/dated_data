Code seems cold and objective, the raw logic of the internet, and Silicon Valley likes it that way.
Programmers hunker down in low-slung Palo Alto office parks having signed a nondisclosure agreement at the door. The work is opaque, confoundingly mathematical. The nation’s media capital is 3,000 miles away.
When algorithms are implicated in a scandal — say, a new tool to decide jail sentences gives black people longer ones, or a web search for information about vaccines offers up noxious conspiracy theories — the playbook is simple: Blame the code, some off-kilter machine learning, an out-of-control A.I. spasm. Certainly no human hand was involved.
Of course, this is a farce. Human hands are all over all of it.
In his new book, “Coders,” the longtime Wired magazine writer Clive Thompson works to describe those humans and exactly what their hands do. With an anthropologist’s eye, he outlines their different personality traits, their history and cultural touchstones. He explores how they live, what motivates them and what they fight about. By breaking down what the actual work of coding looks like — often pretty simple, rote, done in teams rather than by loner geniuses — he removes the mystery and brings it into the legible world for the rest of us to debate. Human beings and their foibles are the reason the internet is how it is — for better and often, as this book shows, for worse.
Every boom in the Valley gets a book, and this sober one is extremely 2019. It is not as fun as the rollicking “The Nudist on the Late Shift,” Po Bronson’s hilarious sendup of Silicon Valley culture of the ’90s. It’s not as intimate as “The New New Thing,” Michael Lewis’s tight profile of an obsessed founder at work. Nor is it slightly aspirational, like Steven Levy’s “Hackers.” But 2019 is not about fun in this town. Thompson approaches Silicon Valley as if he were performing an autopsy.
“Why didn’t the engineers and designers who built these tools, back in the mid-’00s, foresee the dark ways their platforms would be used?” Thompson writes.
He trots out the brogrammers and rock star coders, the hackers and disheveled introverts. He explains how they show off and how they got their jobs.
As he introduces the various types of people you might meet in Silicon Valley today and how they behave, he begins to learn their craft himself, and the book sneaks in a helpful Coding 101, allowing the reader to see that it’s not so hard. “What exactly is a bug?” he asks. And in plain English, he explains. He lays out some lines of code in the language Python. The bug was that the line was missing the required colon that always comes after the word “if.” The lesson is that coding is about tiny but manageable details.
The good coder values efficiency, and he begins to appreciate that. He drinks the popular meal replacement Soylent, and he does not complain. He starts to see how annoyingly complex humans are in comparison.
But a few pages later he sours on his own brief joy as he realizes how it is perverting him. “You can wind up developing habits of mind that feel half machine themselves,” he writes.
The backdrop to this book is that something is broken about Silicon Valley. To understand what isn’t working for so many people it’s necessary to scrutinize the coders themselves, their personalities and biases. The very particular culture they’ve created infuses everything they produce for the rest of us. Because deeply introverted people were drawn to coding, they did not prioritize positive human interactions. A community that indulges thoughts of anarchy was wary of adding any guardrails to the programs and products it produced.
When dealing with an algorithm that can be built for one and scaled to billions, those idiosyncratic foibles matter a lot. A few individuals’ blind spots mean a massive, world-changing system has those same blind spots. Remember that Instagram had 13 employees when Facebook bought it. WhatsApp had 55.
The mostly white men who built the tools of social networks did not recognize the danger of harassment, and so the things they built became conduits for it. If there had been women or people of color in the room, Thompson’s argument goes, there might have been tools built to protect users from the get-go. They were mostly middle-class and upper-middle-class kids from Stanford, and so some of the brightest minds focused on convenience apps, grocery delivery systems and on-demand laundry.
Coders themselves like to buttress the idea that some among them are magical. There is the notion of a 10x coder, a genius who can do the work of 10. One of those famous in Silicon Valley is Max Levchin, who built PayPal. Thompson describes the brutal hours it took Levchin to build something that never existed before, the work and obsession it required to make a thing that now seems obvious. “Empyrean feats of coderly productivity,” he calls it.
And then he dismantles the idea of the genius coder. He presents the case of a start-up ousting a “brilliant jerk” who was writing elaborate (and to everyone else, illegible) code, discovering they were more productive without him. The lesson was that if the team could work better together, “they wouldn’t need superheroes,” and this seems to be the moral of the chapter. Despite the mystique, coding is not an art.
It’s pleasing as he picks up each Silicon Valley cliché, each canard rarely questioned, and dumps it into this wood chip machine.
Many Silicon Valley engineers are convinced that the work is done by males (and built mostly for males) because males are better at coding. They imagine a pure meritocracy. Code either works or it doesn’t. Good code rises. There would be more female coders if females were interested in coding and were a little less neurotic, the argument goes.
He draws a history of early coding when the best early programmers were, in fact, women, and he describes how other countries have far more gender balance in tech. “If women were so biologically neurotic that they couldn’t endure the competitiveness of coding, then the ratio of women-to-men in programming ought to be similar around the world,” Thompson writes.
The only real hero coders in the book are the cypherpunks, a group of cryptography-obsessed coders deeply wary of governments, surveillance and big tech. And they are the good guys here because they told people to be scared of what everyone was building. “The cypherpunks are paranoid, sure — but the rest of us probably should be, too,” Thompson writes.
He ends by describing how coal miners are now learning to code. The work that had seemed so complicated can be taught pretty easily, it turns out. The new Brahmins lose their power if everyone knows what’s behind the curtain, and that seems to be Thompson’s goal with this book. Algorithms are human tools, not magical spells.
